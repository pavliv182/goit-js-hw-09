{"mappings":"YAUA,IAEMA,EAAU,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WAEPF,EAAQ,+CAIT,QAILG,QAAQC,IAAI,yBAGZN,EAAQO,MAEN,SAAAC,GACEH,QAAQC,IAAI,wCACZD,QAAQC,IAAIE,MAGd,SAAAC,GACEJ,QAAQC,IAAI,uCACZD,QAAQC,IAAIG,MAKhBJ,QAAQC,IAAI,wB","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n// Change value of isSuccess variable to call resolve or reject\nconst isSuccess = true;\n\nconst promise = new Promise((resolve, reject) => {\n  setTimeout(() => {\n    if (isSuccess) {\n      resolve('Success! Value passed to resolve function');\n    } else {\n      reject('Error! Error passed to reject function');\n    }\n  }, 2000);\n});\n\n// Will run first\nconsole.log('Before promise.then()');\n\n// Registering promise callbacks\npromise.then(\n  // onResolve will run third or not at all\n  value => {\n    console.log('onResolve call inside promise.then()');\n    console.log(value); // \"Success! Value passed to resolve function\"\n  },\n  // onReject will run third or not at all\n  error => {\n    console.log('onReject call inside promise.then()');\n    console.log(error); // \"Error! Error passed to reject function\"\n  }\n);\n\n// Will run second\nconsole.log('After promise.then()');\n"],"names":["$ce04d3a99e08e73b$var$promise","Promise","resolve","reject","setTimeout","console","log","then","value","error"],"version":3,"file":"03-promises.7742c71d.js.map"}